
*** Running vivado
    with args -log design_2_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_2_wrapper.tcl -notrace



****** Vivado v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:49 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source design_2_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
WARNING: [IP_Flow 19-3685] Ignored loading user repository 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/IP/EQ/EQ.srcs/sources_1/new'. The path is contained within another repository.
INFO: [IP_Flow 19-1700] Loaded user IP repository 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/IP'.
WARNING: [IP_Flow 19-3685] Ignored loading user repository 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/IP/ip_Anf/ip_Anf.srcs/sources_1/new'. The path is contained within another repository.
WARNING: [IP_Flow 19-3685] Ignored loading user repository 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/IP/ip_pitch_shifting_real'. The path is contained within another repository.
WARNING: [IP_Flow 19-3685] Ignored loading user repository 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/IP/ip_apb_comb/ip_apb_comb.srcs/sources_1/new'. The path is contained within another repository.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'D:/Xilinx/Vivado/2020.1/data/ip'.
WARNING: [IP_Flow 19-4995] The host OS only allows 260 characters in a normal path. The IP cache path is more than 80 characters. If you experience issues with IP caching, please consider changing the IP cache to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. 
Current IP cache path is D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.cache/ip 
add_files: Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 1012.820 ; gain = 0.000
Command: link_design -top design_2_wrapper -part xc7z020clg400-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_Buffers_0_0/design_2_Buffers_0_0.dcp' for cell 'design_2_i/Buffers_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_I2S_Receiver_0_0/design_2_I2S_Receiver_0_0.dcp' for cell 'design_2_i/I2S_Receiver_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_I2S_Transmitter_0_0/design_2_I2S_Transmitter_0_0.dcp' for cell 'design_2_i/I2S_Transmitter_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_axi_apb_bridge_0_0/design_2_axi_apb_bridge_0_0.dcp' for cell 'design_2_i/axi_apb_bridge_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_axi_apb_bridge_1_0/design_2_axi_apb_bridge_1_0.dcp' for cell 'design_2_i/axi_apb_bridge_1'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_axi_iic_0_0/design_2_axi_iic_0_0.dcp' for cell 'design_2_i/axi_iic_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_clk_wiz_0_0/design_2_clk_wiz_0_0.dcp' for cell 'design_2_i/clk_wiz_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_processing_system7_0_0/design_2_processing_system7_0_0.dcp' for cell 'design_2_i/processing_system7_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_rst_ps7_0_50M_0/design_2_rst_ps7_0_50M_0.dcp' for cell 'design_2_i/rst_ps7_0_50M'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_ANF_0_7/design_2_AXI_ANF_0_7.dcp' for cell 'design_2_i/effect/AXI_ANF_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_pitch_shift_0_3/design_2_AXI_pitch_shift_0_3.dcp' for cell 'design_2_i/effect/AXI_pitch_shift_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_Button_ctrl_0_0/design_2_Button_ctrl_0_0.dcp' for cell 'design_2_i/effect/Button_ctrl_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_EQ_1_0/design_2_EQ_1_0.dcp' for cell 'design_2_i/effect/EQ/IIR0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_EQ_2_0/design_2_EQ_2_0.dcp' for cell 'design_2_i/effect/EQ/IIR1'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_EQ_0_0/design_2_EQ_0_0.dcp' for cell 'design_2_i/effect/EQ/IIR2'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_EQ_3_0/design_2_EQ_3_0.dcp' for cell 'design_2_i/effect/EQ/IIR3'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_ADD_3_0_9/design_2_AXI_ADD_3_0_9.dcp' for cell 'design_2_i/effect/reverb/AXI_ADD_3_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_ADD_4_0_0/design_2_AXI_ADD_4_0_0.dcp' for cell 'design_2_i/effect/reverb/AXI_ADD_4_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_Allpass_0_0/design_2_AXI_Allpass_0_0.dcp' for cell 'design_2_i/effect/reverb/AXI_Allpass_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_comb_0_0/design_2_AXI_comb_0_0.dcp' for cell 'design_2_i/effect/reverb/AXI_comb_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_comb_1_0/design_2_AXI_comb_1_0.dcp' for cell 'design_2_i/effect/reverb/AXI_comb_1'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_comb_2_0/design_2_AXI_comb_2_0.dcp' for cell 'design_2_i/effect/reverb/AXI_comb_2'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_comb_3_0/design_2_AXI_comb_3_0.dcp' for cell 'design_2_i/effect/reverb/AXI_comb_3'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_early_reflection_0_0/design_2_AXI_early_reflection_0_0.dcp' for cell 'design_2_i/effect/reverb/AXI_early_reflection_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_lowpass_0_0/design_2_AXI_lowpass_0_0.dcp' for cell 'design_2_i/effect/reverb/AXI_lowpass_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_lowpass_1_0/design_2_AXI_lowpass_1_0.dcp' for cell 'design_2_i/effect/reverb/AXI_lowpass_1'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_lowpass_2_0/design_2_AXI_lowpass_2_0.dcp' for cell 'design_2_i/effect/reverb/AXI_lowpass_2'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_AXI_lowpass_3_0/design_2_AXI_lowpass_3_0.dcp' for cell 'design_2_i/effect/reverb/AXI_lowpass_3'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_xbar_0/design_2_xbar_0.dcp' for cell 'design_2_i/ps7_0_axi_periph/xbar'
INFO: [Project 1-454] Reading design checkpoint 'd:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_auto_pc_0/design_2_auto_pc_0.dcp' for cell 'design_2_i/ps7_0_axi_periph/s00_couplers/auto_pc'
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.455 . Memory (MB): peak = 1012.820 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 944 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.1
INFO: [Project 1-570] Preparing netlist for logic optimization
WARNING: [Opt 31-32] Removing redundant IBUF since it is not being driven by a top-level port. design_2_i/clk_wiz_0/inst/clkin1_ibufg 
Resolution: The tool has removed redundant IBUF. To resolve this warning, check for redundant IBUF in the input design.
WARNING: [Constraints 18-550] Could not create 'IBUF_LOW_PWR' constraint because net 'design_2_i/clk_wiz_0/clk_in1' is not directly connected to top level port. Synthesis is ignored for IBUF_LOW_PWR but preserved for implementation.
Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_processing_system7_0_0/design_2_processing_system7_0_0.xdc] for cell 'design_2_i/processing_system7_0/inst'
Finished Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_processing_system7_0_0/design_2_processing_system7_0_0.xdc] for cell 'design_2_i/processing_system7_0/inst'
Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_axi_iic_0_0/design_2_axi_iic_0_0_board.xdc] for cell 'design_2_i/axi_iic_0/U0'
Finished Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_axi_iic_0_0/design_2_axi_iic_0_0_board.xdc] for cell 'design_2_i/axi_iic_0/U0'
Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_rst_ps7_0_50M_0/design_2_rst_ps7_0_50M_0_board.xdc] for cell 'design_2_i/rst_ps7_0_50M/U0'
Finished Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_rst_ps7_0_50M_0/design_2_rst_ps7_0_50M_0_board.xdc] for cell 'design_2_i/rst_ps7_0_50M/U0'
Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_rst_ps7_0_50M_0/design_2_rst_ps7_0_50M_0.xdc] for cell 'design_2_i/rst_ps7_0_50M/U0'
Finished Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_rst_ps7_0_50M_0/design_2_rst_ps7_0_50M_0.xdc] for cell 'design_2_i/rst_ps7_0_50M/U0'
Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_clk_wiz_0_0/design_2_clk_wiz_0_0_board.xdc] for cell 'design_2_i/clk_wiz_0/inst'
Finished Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_clk_wiz_0_0/design_2_clk_wiz_0_0_board.xdc] for cell 'design_2_i/clk_wiz_0/inst'
Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_clk_wiz_0_0/design_2_clk_wiz_0_0.xdc] for cell 'design_2_i/clk_wiz_0/inst'
INFO: [Timing 38-35] Done setting XDC timing constraints. [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_clk_wiz_0_0/design_2_clk_wiz_0_0.xdc:57]
INFO: [Timing 38-2] Deriving generated clocks [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_clk_wiz_0_0/design_2_clk_wiz_0_0.xdc:57]
get_clocks: Time (s): cpu = 00:00:16 ; elapsed = 00:00:13 . Memory (MB): peak = 1494.738 ; gain = 481.918
Finished Parsing XDC File [d:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/sources_1/bd/design_2/ip/design_2_clk_wiz_0_0/design_2_clk_wiz_0_0.xdc] for cell 'design_2_i/clk_wiz_0/inst'
Parsing XDC File [D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/constrs_1/imports/constr/PYNQ-Z2 v1.0.xdc]
WARNING: [Vivado 12-584] No ports matched 'iic_rtl_sda_io'. [D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/constrs_1/imports/constr/PYNQ-Z2 v1.0.xdc:69]
CRITICAL WARNING: [Common 17-55] 'set_property' expects at least one object. [D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/constrs_1/imports/constr/PYNQ-Z2 v1.0.xdc:69]
Resolution: If [get_<value>] was used to populate the object, check to make sure this command returns at least one valid object.
WARNING: [Vivado 12-584] No ports matched 'iic_rtl_sda_io'. [D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/constrs_1/imports/constr/PYNQ-Z2 v1.0.xdc:70]
CRITICAL WARNING: [Common 17-55] 'set_property' expects at least one object. [D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/constrs_1/imports/constr/PYNQ-Z2 v1.0.xdc:70]
Resolution: If [get_<value>] was used to populate the object, check to make sure this command returns at least one valid object.
WARNING: [Vivado 12-584] No ports matched 'iic_rtl_scl_io'. [D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/constrs_1/imports/constr/PYNQ-Z2 v1.0.xdc:71]
CRITICAL WARNING: [Common 17-55] 'set_property' expects at least one object. [D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/constrs_1/imports/constr/PYNQ-Z2 v1.0.xdc:71]
Resolution: If [get_<value>] was used to populate the object, check to make sure this command returns at least one valid object.
WARNING: [Vivado 12-584] No ports matched 'iic_rtl_scl_io'. [D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/constrs_1/imports/constr/PYNQ-Z2 v1.0.xdc:72]
CRITICAL WARNING: [Common 17-55] 'set_property' expects at least one object. [D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/constrs_1/imports/constr/PYNQ-Z2 v1.0.xdc:72]
Resolution: If [get_<value>] was used to populate the object, check to make sure this command returns at least one valid object.
Finished Parsing XDC File [D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.srcs/constrs_1/imports/constr/PYNQ-Z2 v1.0.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.012 . Memory (MB): peak = 1494.738 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 2 instances were transformed.
  IOBUF => IOBUF (IBUF, OBUFT): 2 instances

42 Infos, 11 Warnings, 4 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:35 ; elapsed = 00:00:53 . Memory (MB): peak = 1494.738 ; gain = 481.918
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 1494.738 ; gain = 0.000

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 181f272f3

Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 1523.773 ; gain = 29.035

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 1 inverter(s) to 1 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 1abb6de7b

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 1721.086 ; gain = 0.000
INFO: [Opt 31-389] Phase Retarget created 230 cells and removed 334 cells
INFO: [Opt 31-1021] In phase Retarget, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 19c2cf974

Time (s): cpu = 00:00:05 ; elapsed = 00:00:03 . Memory (MB): peak = 1721.086 ; gain = 0.000
INFO: [Opt 31-389] Phase Constant propagation created 47 cells and removed 70 cells
INFO: [Opt 31-1021] In phase Constant propagation, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 2564071f7

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 1721.086 ; gain = 0.000
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 373 cells
INFO: [Opt 31-1021] In phase Sweep, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 2564071f7

Time (s): cpu = 00:00:07 ; elapsed = 00:00:06 . Memory (MB): peak = 1721.086 ; gain = 0.000
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 1654c1a6e

Time (s): cpu = 00:00:08 ; elapsed = 00:00:07 . Memory (MB): peak = 1721.086 ; gain = 0.000
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 194670cdc

Time (s): cpu = 00:00:09 ; elapsed = 00:00:08 . Memory (MB): peak = 1721.086 ; gain = 0.000
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |             230  |             334  |                                              1  |
|  Constant propagation         |              47  |              70  |                                              1  |
|  Sweep                        |               0  |             373  |                                              1  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                              0  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.066 . Memory (MB): peak = 1721.086 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 2824fc87b

Time (s): cpu = 00:00:11 ; elapsed = 00:00:09 . Memory (MB): peak = 1721.086 ; gain = 0.000

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 2 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 0 newly gated: 2 Total Ports: 4
Ending PowerOpt Patch Enables Task | Checksum: 283359167

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.284 . Memory (MB): peak = 1862.941 ; gain = 0.000
Ending Power Optimization Task | Checksum: 283359167

Time (s): cpu = 00:00:16 ; elapsed = 00:00:09 . Memory (MB): peak = 1862.941 ; gain = 141.855

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 283359167

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 1862.941 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.012 . Memory (MB): peak = 1862.941 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: 2531f4996

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.012 . Memory (MB): peak = 1862.941 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
67 Infos, 11 Warnings, 4 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:38 ; elapsed = 00:00:26 . Memory (MB): peak = 1862.941 ; gain = 368.203
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.099 . Memory (MB): peak = 1862.941 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.runs/impl_1/design_2_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:09 . Memory (MB): peak = 1862.941 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_2_wrapper_drc_opted.rpt -pb design_2_wrapper_drc_opted.pb -rpx design_2_wrapper_drc_opted.rpx
Command: report_drc -file design_2_wrapper_drc_opted.rpt -pb design_2_wrapper_drc_opted.pb -rpx design_2_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.runs/impl_1/design_2_wrapper_drc_opted.rpt.
report_drc completed successfully
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1839 rule limit reached: 20 violations have been found.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[10] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[5]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[11] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[6]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[12] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[7]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[13] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[8]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[14] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[9]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[9]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[5] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[0]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[6] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[1]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[7] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[2]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[8] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[3]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[9] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[4]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[10] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[5]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[11] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[6]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[12] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[7]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[13] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[8]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[14] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[9]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_read_addr_reg[9]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[5] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[0]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[6] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[1]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[7] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[2]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[8] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[3]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[9] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[4]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors, 21 Warnings
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.012 . Memory (MB): peak = 1862.941 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 19498e405

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.035 . Memory (MB): peak = 1862.941 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.011 . Memory (MB): peak = 1862.941 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 13deb1f80

Time (s): cpu = 00:00:05 ; elapsed = 00:00:03 . Memory (MB): peak = 1862.941 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 19f4db714

Time (s): cpu = 00:00:22 ; elapsed = 00:00:15 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 19f4db714

Time (s): cpu = 00:00:22 ; elapsed = 00:00:15 . Memory (MB): peak = 1958.008 ; gain = 95.066
Phase 1 Placer Initialization | Checksum: 19f4db714

Time (s): cpu = 00:00:22 ; elapsed = 00:00:15 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 1143d830f

Time (s): cpu = 00:00:25 ; elapsed = 00:00:16 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 2.2 Global Placement Core

Phase 2.2.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 1548 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-775] End 1 Pass. Optimized 733 nets or cells. Created 0 new cell, deleted 733 existing cells and moved 0 existing cell
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for HD net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.010 . Memory (MB): peak = 1958.008 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |            733  |                   733  |           0  |           1  |  00:00:01  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |            733  |                   733  |           0  |           3  |  00:00:02  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.2.1 Physical Synthesis In Placer | Checksum: f08edf9a

Time (s): cpu = 00:01:07 ; elapsed = 00:00:40 . Memory (MB): peak = 1958.008 ; gain = 95.066
Phase 2.2 Global Placement Core | Checksum: 1b090b870

Time (s): cpu = 00:01:08 ; elapsed = 00:00:42 . Memory (MB): peak = 1958.008 ; gain = 95.066
Phase 2 Global Placement | Checksum: 1b090b870

Time (s): cpu = 00:01:09 ; elapsed = 00:00:42 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1a0746952

Time (s): cpu = 00:01:12 ; elapsed = 00:00:44 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1995f367c

Time (s): cpu = 00:01:21 ; elapsed = 00:00:50 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 184d50554

Time (s): cpu = 00:01:21 ; elapsed = 00:00:50 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 191cdaa69

Time (s): cpu = 00:01:22 ; elapsed = 00:00:50 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 20fa25aff

Time (s): cpu = 00:01:29 ; elapsed = 00:00:57 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: 13d89d1b3

Time (s): cpu = 00:01:30 ; elapsed = 00:00:59 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 157dfc04d

Time (s): cpu = 00:01:30 ; elapsed = 00:00:59 . Memory (MB): peak = 1958.008 ; gain = 95.066
Phase 3 Detail Placement | Checksum: 157dfc04d

Time (s): cpu = 00:01:31 ; elapsed = 00:00:59 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 23bea7ff1

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-0.030 | TNS=-0.052 |
Phase 1 Physical Synthesis Initialization | Checksum: 238977b82

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 1958.008 ; gain = 0.000
INFO: [Place 46-33] Processed net design_2_i/effect/AXI_ANF_0/inst/r_led_i_2_n_0, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 1 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 1, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 238ea7580

Time (s): cpu = 00:00:04 ; elapsed = 00:00:02 . Memory (MB): peak = 1958.008 ; gain = 0.000
Phase 4.1.1.1 BUFG Insertion | Checksum: 23bea7ff1

Time (s): cpu = 00:01:52 ; elapsed = 00:01:14 . Memory (MB): peak = 1958.008 ; gain = 95.066
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.502. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 1dc7bf161

Time (s): cpu = 00:01:58 ; elapsed = 00:01:18 . Memory (MB): peak = 1958.008 ; gain = 95.066
Phase 4.1 Post Commit Optimization | Checksum: 1dc7bf161

Time (s): cpu = 00:01:58 ; elapsed = 00:01:18 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1dc7bf161

Time (s): cpu = 00:01:58 ; elapsed = 00:01:19 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 1dc7bf161

Time (s): cpu = 00:01:59 ; elapsed = 00:01:19 . Memory (MB): peak = 1958.008 ; gain = 95.066

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1958.008 ; gain = 0.000
Phase 4.4 Final Placement Cleanup | Checksum: 14fd81467

Time (s): cpu = 00:01:59 ; elapsed = 00:01:19 . Memory (MB): peak = 1958.008 ; gain = 95.066
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 14fd81467

Time (s): cpu = 00:01:59 ; elapsed = 00:01:19 . Memory (MB): peak = 1958.008 ; gain = 95.066
Ending Placer Task | Checksum: c2c25752

Time (s): cpu = 00:01:59 ; elapsed = 00:01:19 . Memory (MB): peak = 1958.008 ; gain = 95.066
INFO: [Common 17-83] Releasing license: Implementation
102 Infos, 32 Warnings, 4 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:02:04 ; elapsed = 00:01:22 . Memory (MB): peak = 1958.008 ; gain = 95.066
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:12 ; elapsed = 00:00:04 . Memory (MB): peak = 1958.008 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.runs/impl_1/design_2_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:15 ; elapsed = 00:00:08 . Memory (MB): peak = 1958.008 ; gain = 0.000
INFO: [runtcl-4] Executing : report_io -file design_2_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.068 . Memory (MB): peak = 1958.008 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file design_2_wrapper_utilization_placed.rpt -pb design_2_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_2_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.150 . Memory (MB): peak = 1958.008 ; gain = 0.000
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
111 Infos, 32 Warnings, 4 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:13 ; elapsed = 00:00:08 . Memory (MB): peak = 1967.629 ; gain = 9.621
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:12 ; elapsed = 00:00:04 . Memory (MB): peak = 1982.820 ; gain = 15.191
INFO: [Common 17-1381] The checkpoint 'D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.runs/impl_1/design_2_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:15 ; elapsed = 00:00:08 . Memory (MB): peak = 1982.820 ; gain = 15.191
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: 96db8e5d ConstDB: 0 ShapeSum: 2be6c8f5 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 2accf5df

Time (s): cpu = 00:01:22 ; elapsed = 00:00:40 . Memory (MB): peak = 2084.934 ; gain = 82.734
Post Restoration Checksum: NetGraph: 14d74616 NumContArr: 15f5afc9 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 2accf5df

Time (s): cpu = 00:01:23 ; elapsed = 00:00:41 . Memory (MB): peak = 2084.934 ; gain = 82.734

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 2accf5df

Time (s): cpu = 00:01:23 ; elapsed = 00:00:41 . Memory (MB): peak = 2090.535 ; gain = 88.336

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 2accf5df

Time (s): cpu = 00:01:23 ; elapsed = 00:00:41 . Memory (MB): peak = 2090.535 ; gain = 88.336
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: fbc39714

Time (s): cpu = 00:01:45 ; elapsed = 00:00:55 . Memory (MB): peak = 2148.570 ; gain = 146.371
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.608  | TNS=0.000  | WHS=-0.215 | THS=-589.366|

Phase 2 Router Initialization | Checksum: d4ccf264

Time (s): cpu = 00:01:59 ; elapsed = 00:01:03 . Memory (MB): peak = 2189.477 ; gain = 187.277

Router Utilization Summary
  Global Vertical Routing Utilization    = 0.0105623 %
  Global Horizontal Routing Utilization  = 0.0134381 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 28656
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 28559
  Number of Partially Routed Nets     = 97
  Number of Node Overlaps             = 44


Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 1b0534ff1

Time (s): cpu = 00:02:05 ; elapsed = 00:01:07 . Memory (MB): peak = 2189.477 ; gain = 187.277

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 831
 Number of Nodes with overlaps = 46
 Number of Nodes with overlaps = 5
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.677  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 221b413dc

Time (s): cpu = 00:02:20 ; elapsed = 00:01:16 . Memory (MB): peak = 2189.477 ; gain = 187.277

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.677  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 99286132

Time (s): cpu = 00:02:20 ; elapsed = 00:01:17 . Memory (MB): peak = 2189.477 ; gain = 187.277
Phase 4 Rip-up And Reroute | Checksum: 99286132

Time (s): cpu = 00:02:21 ; elapsed = 00:01:17 . Memory (MB): peak = 2189.477 ; gain = 187.277

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 99286132

Time (s): cpu = 00:02:21 ; elapsed = 00:01:17 . Memory (MB): peak = 2189.477 ; gain = 187.277

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 99286132

Time (s): cpu = 00:02:21 ; elapsed = 00:01:17 . Memory (MB): peak = 2189.477 ; gain = 187.277
Phase 5 Delay and Skew Optimization | Checksum: 99286132

Time (s): cpu = 00:02:21 ; elapsed = 00:01:17 . Memory (MB): peak = 2189.477 ; gain = 187.277

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 17bcabcdb

Time (s): cpu = 00:02:25 ; elapsed = 00:01:20 . Memory (MB): peak = 2189.477 ; gain = 187.277
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.691  | TNS=0.000  | WHS=0.024  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 16f991c35

Time (s): cpu = 00:02:25 ; elapsed = 00:01:20 . Memory (MB): peak = 2189.477 ; gain = 187.277
Phase 6 Post Hold Fix | Checksum: 16f991c35

Time (s): cpu = 00:02:25 ; elapsed = 00:01:20 . Memory (MB): peak = 2189.477 ; gain = 187.277

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 5.67314 %
  Global Horizontal Routing Utilization  = 7.84812 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 12b12a12a

Time (s): cpu = 00:02:25 ; elapsed = 00:01:20 . Memory (MB): peak = 2189.477 ; gain = 187.277

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 12b12a12a

Time (s): cpu = 00:02:26 ; elapsed = 00:01:20 . Memory (MB): peak = 2189.477 ; gain = 187.277

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: fe05a649

Time (s): cpu = 00:02:28 ; elapsed = 00:01:23 . Memory (MB): peak = 2190.672 ; gain = 188.473

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=0.691  | TNS=0.000  | WHS=0.024  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: fe05a649

Time (s): cpu = 00:02:28 ; elapsed = 00:01:23 . Memory (MB): peak = 2190.672 ; gain = 188.473
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:02:28 ; elapsed = 00:01:23 . Memory (MB): peak = 2190.672 ; gain = 188.473

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
126 Infos, 32 Warnings, 4 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:02:34 ; elapsed = 00:01:26 . Memory (MB): peak = 2190.672 ; gain = 207.852
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:13 ; elapsed = 00:00:05 . Memory (MB): peak = 2190.672 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.runs/impl_1/design_2_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:16 ; elapsed = 00:00:08 . Memory (MB): peak = 2190.672 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_2_wrapper_drc_routed.rpt -pb design_2_wrapper_drc_routed.pb -rpx design_2_wrapper_drc_routed.rpx
Command: report_drc -file design_2_wrapper_drc_routed.rpt -pb design_2_wrapper_drc_routed.pb -rpx design_2_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.runs/impl_1/design_2_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:12 ; elapsed = 00:00:07 . Memory (MB): peak = 2190.672 ; gain = 0.000
INFO: [runtcl-4] Executing : report_methodology -file design_2_wrapper_methodology_drc_routed.rpt -pb design_2_wrapper_methodology_drc_routed.pb -rpx design_2_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_2_wrapper_methodology_drc_routed.rpt -pb design_2_wrapper_methodology_drc_routed.pb -rpx design_2_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.runs/impl_1/design_2_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:34 ; elapsed = 00:00:19 . Memory (MB): peak = 2342.797 ; gain = 152.125
INFO: [runtcl-4] Executing : report_power -file design_2_wrapper_power_routed.rpt -pb design_2_wrapper_power_summary_routed.pb -rpx design_2_wrapper_power_routed.rpx
Command: report_power -file design_2_wrapper_power_routed.rpt -pb design_2_wrapper_power_summary_routed.pb -rpx design_2_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
138 Infos, 32 Warnings, 4 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:32 ; elapsed = 00:00:18 . Memory (MB): peak = 2342.797 ; gain = 0.000
INFO: [runtcl-4] Executing : report_route_status -file design_2_wrapper_route_status.rpt -pb design_2_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_2_wrapper_timing_summary_routed.rpt -pb design_2_wrapper_timing_summary_routed.pb -rpx design_2_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_2_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_2_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_2_wrapper_bus_skew_routed.rpt -pb design_2_wrapper_bus_skew_routed.pb -rpx design_2_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
Command: write_bitstream -force design_2_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1839 rule limit reached: 20 violations have been found.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02 input design_2_i/effect/AXI_ANF_0/inst/AC02/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02 input design_2_i/effect/AXI_ANF_0/inst/AC02/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__0 input design_2_i/effect/AXI_ANF_0/inst/AC02__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__1 input design_2_i/effect/AXI_ANF_0/inst/AC02__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__2 input design_2_i/effect/AXI_ANF_0/inst/AC02__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__2 input design_2_i/effect/AXI_ANF_0/inst/AC02__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__3 input design_2_i/effect/AXI_ANF_0/inst/AC02__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__3 input design_2_i/effect/AXI_ANF_0/inst/AC02__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC0_rt2 input design_2_i/effect/AXI_ANF_0/inst/AC0_rt2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC0_rt2 input design_2_i/effect/AXI_ANF_0/inst/AC0_rt2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC0_rt2__0 input design_2_i/effect/AXI_ANF_0/inst/AC0_rt2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC141 input design_2_i/effect/AXI_ANF_0/inst/AC141/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC141 input design_2_i/effect/AXI_ANF_0/inst/AC141/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC141__0 input design_2_i/effect/AXI_ANF_0/inst/AC141__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC141__0 input design_2_i/effect/AXI_ANF_0/inst/AC141__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC141__1 input design_2_i/effect/AXI_ANF_0/inst/AC141__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC141__1 input design_2_i/effect/AXI_ANF_0/inst/AC141__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC142 input design_2_i/effect/AXI_ANF_0/inst/AC142/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC142 input design_2_i/effect/AXI_ANF_0/inst/AC142/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC142__0 input design_2_i/effect/AXI_ANF_0/inst/AC142__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt1 input design_2_i/effect/AXI_ANF_0/inst/AC14_rt1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt1 input design_2_i/effect/AXI_ANF_0/inst/AC14_rt1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__0 input design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__0 input design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__1 input design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__1 input design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt2 input design_2_i/effect/AXI_ANF_0/inst/AC14_rt2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt2 input design_2_i/effect/AXI_ANF_0/inst/AC14_rt2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt2__0 input design_2_i/effect/AXI_ANF_0/inst/AC14_rt2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC21 input design_2_i/effect/AXI_ANF_0/inst/AC21/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC21 input design_2_i/effect/AXI_ANF_0/inst/AC21/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC21__0 input design_2_i/effect/AXI_ANF_0/inst/AC21__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC21__0 input design_2_i/effect/AXI_ANF_0/inst/AC21__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC2_rt1 input design_2_i/effect/AXI_ANF_0/inst/AC2_rt1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC2_rt1 input design_2_i/effect/AXI_ANF_0/inst/AC2_rt1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC2_rt1__0 input design_2_i/effect/AXI_ANF_0/inst/AC2_rt1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC2_rt1__0 input design_2_i/effect/AXI_ANF_0/inst/AC2_rt1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC31 input design_2_i/effect/AXI_ANF_0/inst/AC31/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC31 input design_2_i/effect/AXI_ANF_0/inst/AC31/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC31__0 input design_2_i/effect/AXI_ANF_0/inst/AC31__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC31__0 input design_2_i/effect/AXI_ANF_0/inst/AC31__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC31__1 input design_2_i/effect/AXI_ANF_0/inst/AC31__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC31__1 input design_2_i/effect/AXI_ANF_0/inst/AC31__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC32 input design_2_i/effect/AXI_ANF_0/inst/AC32/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC32 input design_2_i/effect/AXI_ANF_0/inst/AC32/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC32__0 input design_2_i/effect/AXI_ANF_0/inst/AC32__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC32__0 input design_2_i/effect/AXI_ANF_0/inst/AC32__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt1 input design_2_i/effect/AXI_ANF_0/inst/AC3_rt1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt1 input design_2_i/effect/AXI_ANF_0/inst/AC3_rt1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__0 input design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__0 input design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__1 input design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__1 input design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt2 input design_2_i/effect/AXI_ANF_0/inst/AC3_rt2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt2 input design_2_i/effect/AXI_ANF_0/inst/AC3_rt2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt2__0 input design_2_i/effect/AXI_ANF_0/inst/AC3_rt2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt2__0 input design_2_i/effect/AXI_ANF_0/inst/AC3_rt2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC41 input design_2_i/effect/AXI_ANF_0/inst/AC41/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC41 input design_2_i/effect/AXI_ANF_0/inst/AC41/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC41__0 input design_2_i/effect/AXI_ANF_0/inst/AC41__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC41__0 input design_2_i/effect/AXI_ANF_0/inst/AC41__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC41__1 input design_2_i/effect/AXI_ANF_0/inst/AC41__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC41__1 input design_2_i/effect/AXI_ANF_0/inst/AC41__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC42 input design_2_i/effect/AXI_ANF_0/inst/AC42/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC42 input design_2_i/effect/AXI_ANF_0/inst/AC42/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC42__0 input design_2_i/effect/AXI_ANF_0/inst/AC42__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC42__0 input design_2_i/effect/AXI_ANF_0/inst/AC42__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt1 input design_2_i/effect/AXI_ANF_0/inst/AC4_rt1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt1 input design_2_i/effect/AXI_ANF_0/inst/AC4_rt1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__0 input design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__0 input design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__1 input design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__1 input design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt2 input design_2_i/effect/AXI_ANF_0/inst/AC4_rt2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt2 input design_2_i/effect/AXI_ANF_0/inst/AC4_rt2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt2__0 input design_2_i/effect/AXI_ANF_0/inst/AC4_rt2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt2__0 input design_2_i/effect/AXI_ANF_0/inst/AC4_rt2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC00 input design_2_i/effect/AXI_pitch_shift_0/inst/AC00/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC00__0 input design_2_i/effect/AXI_pitch_shift_0/inst/AC00__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC10 input design_2_i/effect/AXI_pitch_shift_0/inst/AC10/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC10 input design_2_i/effect/AXI_pitch_shift_0/inst/AC10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC10__0 input design_2_i/effect/AXI_pitch_shift_0/inst/AC10__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x01 input design_2_i/effect/EQ/IIR0/inst/r_x01/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x01__0 input design_2_i/effect/EQ/IIR0/inst/r_x01__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x0_right1 input design_2_i/effect/EQ/IIR0/inst/r_x0_right1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x0_right1__0 input design_2_i/effect/EQ/IIR0/inst/r_x0_right1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x11 input design_2_i/effect/EQ/IIR0/inst/r_x11/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x11__0 input design_2_i/effect/EQ/IIR0/inst/r_x11__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x1_right1 input design_2_i/effect/EQ/IIR0/inst/r_x1_right1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x1_right1__0 input design_2_i/effect/EQ/IIR0/inst/r_x1_right1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x21 input design_2_i/effect/EQ/IIR0/inst/r_x21/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x21__0 input design_2_i/effect/EQ/IIR0/inst/r_x21__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x2_right1 input design_2_i/effect/EQ/IIR0/inst/r_x2_right1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x2_right1__0 input design_2_i/effect/EQ/IIR0/inst/r_x2_right1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y11 input design_2_i/effect/EQ/IIR0/inst/r_y11/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y11__0 input design_2_i/effect/EQ/IIR0/inst/r_y11__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y1_right1 input design_2_i/effect/EQ/IIR0/inst/r_y1_right1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y1_right1__0 input design_2_i/effect/EQ/IIR0/inst/r_y1_right1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y21 input design_2_i/effect/EQ/IIR0/inst/r_y21/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y21__0 input design_2_i/effect/EQ/IIR0/inst/r_y21__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02 output design_2_i/effect/AXI_ANF_0/inst/AC02/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__0 output design_2_i/effect/AXI_ANF_0/inst/AC02__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__1 output design_2_i/effect/AXI_ANF_0/inst/AC02__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__2 output design_2_i/effect/AXI_ANF_0/inst/AC02__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__3 output design_2_i/effect/AXI_ANF_0/inst/AC02__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC0_rt2 output design_2_i/effect/AXI_ANF_0/inst/AC0_rt2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC0_rt2__0 output design_2_i/effect/AXI_ANF_0/inst/AC0_rt2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC141__0 output design_2_i/effect/AXI_ANF_0/inst/AC141__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC141__1 output design_2_i/effect/AXI_ANF_0/inst/AC141__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC142 output design_2_i/effect/AXI_ANF_0/inst/AC142/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC142__0 output design_2_i/effect/AXI_ANF_0/inst/AC142__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__0 output design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__1 output design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt2 output design_2_i/effect/AXI_ANF_0/inst/AC14_rt2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt2__0 output design_2_i/effect/AXI_ANF_0/inst/AC14_rt2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC21__0 output design_2_i/effect/AXI_ANF_0/inst/AC21__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC2_rt1__0 output design_2_i/effect/AXI_ANF_0/inst/AC2_rt1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC31__0 output design_2_i/effect/AXI_ANF_0/inst/AC31__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC31__1 output design_2_i/effect/AXI_ANF_0/inst/AC31__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC32 output design_2_i/effect/AXI_ANF_0/inst/AC32/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC32__0 output design_2_i/effect/AXI_ANF_0/inst/AC32__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__0 output design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__1 output design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt2 output design_2_i/effect/AXI_ANF_0/inst/AC3_rt2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt2__0 output design_2_i/effect/AXI_ANF_0/inst/AC3_rt2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC41__0 output design_2_i/effect/AXI_ANF_0/inst/AC41__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC41__1 output design_2_i/effect/AXI_ANF_0/inst/AC41__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC42 output design_2_i/effect/AXI_ANF_0/inst/AC42/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC42__0 output design_2_i/effect/AXI_ANF_0/inst/AC42__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__0 output design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__1 output design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt2 output design_2_i/effect/AXI_ANF_0/inst/AC4_rt2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt2__0 output design_2_i/effect/AXI_ANF_0/inst/AC4_rt2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC00 output design_2_i/effect/AXI_pitch_shift_0/inst/AC00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC00__0 output design_2_i/effect/AXI_pitch_shift_0/inst/AC00__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC10 output design_2_i/effect/AXI_pitch_shift_0/inst/AC10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC10__0 output design_2_i/effect/AXI_pitch_shift_0/inst/AC10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x01 output design_2_i/effect/EQ/IIR0/inst/r_x01/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x01__0 output design_2_i/effect/EQ/IIR0/inst/r_x01__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x0_right1 output design_2_i/effect/EQ/IIR0/inst/r_x0_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x0_right1__0 output design_2_i/effect/EQ/IIR0/inst/r_x0_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x11 output design_2_i/effect/EQ/IIR0/inst/r_x11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x11__0 output design_2_i/effect/EQ/IIR0/inst/r_x11__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x1_right1 output design_2_i/effect/EQ/IIR0/inst/r_x1_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x1_right1__0 output design_2_i/effect/EQ/IIR0/inst/r_x1_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x21 output design_2_i/effect/EQ/IIR0/inst/r_x21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x21__0 output design_2_i/effect/EQ/IIR0/inst/r_x21__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x2_right1 output design_2_i/effect/EQ/IIR0/inst/r_x2_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x2_right1__0 output design_2_i/effect/EQ/IIR0/inst/r_x2_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y11 output design_2_i/effect/EQ/IIR0/inst/r_y11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y11__0 output design_2_i/effect/EQ/IIR0/inst/r_y11__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y1_right1 output design_2_i/effect/EQ/IIR0/inst/r_y1_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y1_right1__0 output design_2_i/effect/EQ/IIR0/inst/r_y1_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y21 output design_2_i/effect/EQ/IIR0/inst/r_y21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y21__0 output design_2_i/effect/EQ/IIR0/inst/r_y21__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y2_right1 output design_2_i/effect/EQ/IIR0/inst/r_y2_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y2_right1__0 output design_2_i/effect/EQ/IIR0/inst/r_y2_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x01 output design_2_i/effect/EQ/IIR1/inst/r_x01/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x01__0 output design_2_i/effect/EQ/IIR1/inst/r_x01__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x0_right1 output design_2_i/effect/EQ/IIR1/inst/r_x0_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x0_right1__0 output design_2_i/effect/EQ/IIR1/inst/r_x0_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x11 output design_2_i/effect/EQ/IIR1/inst/r_x11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x11__0 output design_2_i/effect/EQ/IIR1/inst/r_x11__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x1_right1 output design_2_i/effect/EQ/IIR1/inst/r_x1_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x1_right1__0 output design_2_i/effect/EQ/IIR1/inst/r_x1_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x21 output design_2_i/effect/EQ/IIR1/inst/r_x21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x21__0 output design_2_i/effect/EQ/IIR1/inst/r_x21__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x2_right1 output design_2_i/effect/EQ/IIR1/inst/r_x2_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x2_right1__0 output design_2_i/effect/EQ/IIR1/inst/r_x2_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y11 output design_2_i/effect/EQ/IIR1/inst/r_y11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y11__0 output design_2_i/effect/EQ/IIR1/inst/r_y11__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y1_right1 output design_2_i/effect/EQ/IIR1/inst/r_y1_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y1_right1__0 output design_2_i/effect/EQ/IIR1/inst/r_y1_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y21 output design_2_i/effect/EQ/IIR1/inst/r_y21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y21__0 output design_2_i/effect/EQ/IIR1/inst/r_y21__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y2_right1 output design_2_i/effect/EQ/IIR1/inst/r_y2_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y2_right1__0 output design_2_i/effect/EQ/IIR1/inst/r_y2_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x01 output design_2_i/effect/EQ/IIR2/inst/r_x01/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x01__0 output design_2_i/effect/EQ/IIR2/inst/r_x01__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x0_right1 output design_2_i/effect/EQ/IIR2/inst/r_x0_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x0_right1__0 output design_2_i/effect/EQ/IIR2/inst/r_x0_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x11 output design_2_i/effect/EQ/IIR2/inst/r_x11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x11__0 output design_2_i/effect/EQ/IIR2/inst/r_x11__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x1_right1 output design_2_i/effect/EQ/IIR2/inst/r_x1_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x1_right1__0 output design_2_i/effect/EQ/IIR2/inst/r_x1_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x21 output design_2_i/effect/EQ/IIR2/inst/r_x21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x21__0 output design_2_i/effect/EQ/IIR2/inst/r_x21__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x2_right1 output design_2_i/effect/EQ/IIR2/inst/r_x2_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x2_right1__0 output design_2_i/effect/EQ/IIR2/inst/r_x2_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y11 output design_2_i/effect/EQ/IIR2/inst/r_y11/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y11__0 output design_2_i/effect/EQ/IIR2/inst/r_y11__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y1_right1 output design_2_i/effect/EQ/IIR2/inst/r_y1_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y1_right1__0 output design_2_i/effect/EQ/IIR2/inst/r_y1_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y21 output design_2_i/effect/EQ/IIR2/inst/r_y21/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y21__0 output design_2_i/effect/EQ/IIR2/inst/r_y21__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y2_right1 output design_2_i/effect/EQ/IIR2/inst/r_y2_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y2_right1__0 output design_2_i/effect/EQ/IIR2/inst/r_y2_right1__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR3/inst/r_x01 output design_2_i/effect/EQ/IIR3/inst/r_x01/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR3/inst/r_x01__0 output design_2_i/effect/EQ/IIR3/inst/r_x01__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_2_i/effect/EQ/IIR3/inst/r_x0_right1 output design_2_i/effect/EQ/IIR3/inst/r_x0_right1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
INFO: [Common 17-14] Message 'DRC DPOP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC02/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC02__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__1 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC02__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__2 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC02__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC02__3 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC02__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC0_rt2 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC0_rt2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC0_rt2__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC0_rt2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC141__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC141__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC141__1 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC141__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC142 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC142/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC142__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC142__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__1 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC14_rt1__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt2 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC14_rt2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC14_rt2__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC14_rt2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC21__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC21__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC2_rt1__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC2_rt1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC31__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC31__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC31__1 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC31__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC32 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC32/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC32__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC32__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__1 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC3_rt1__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt2 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC3_rt2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC3_rt2__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC3_rt2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC41__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC41__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC41__1 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC41__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC42 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC42/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC42__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC42__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__1 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC4_rt1__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt2 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC4_rt2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_ANF_0/inst/AC4_rt2__0 multiplier stage design_2_i/effect/AXI_ANF_0/inst/AC4_rt2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC00 multiplier stage design_2_i/effect/AXI_pitch_shift_0/inst/AC00/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC00__0 multiplier stage design_2_i/effect/AXI_pitch_shift_0/inst/AC00__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC10 multiplier stage design_2_i/effect/AXI_pitch_shift_0/inst/AC10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/AXI_pitch_shift_0/inst/AC10__0 multiplier stage design_2_i/effect/AXI_pitch_shift_0/inst/AC10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x01 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x01/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x01__0 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x01__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x0_right1 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x0_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x0_right1__0 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x0_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x11 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x11__0 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x11__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x1_right1 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x1_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x1_right1__0 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x1_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x21 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x21__0 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x21__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x2_right1 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x2_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_x2_right1__0 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_x2_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y11 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_y11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y11__0 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_y11__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y1_right1 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_y1_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y1_right1__0 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_y1_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y21 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_y21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y21__0 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_y21__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y2_right1 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_y2_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR0/inst/r_y2_right1__0 multiplier stage design_2_i/effect/EQ/IIR0/inst/r_y2_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x01 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x01/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x01__0 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x01__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x0_right1 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x0_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x0_right1__0 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x0_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x11 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x11__0 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x11__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x1_right1 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x1_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x1_right1__0 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x1_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x21 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x21__0 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x21__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x2_right1 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x2_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_x2_right1__0 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_x2_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y11 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_y11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y11__0 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_y11__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y1_right1 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_y1_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y1_right1__0 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_y1_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y21 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_y21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y21__0 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_y21__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y2_right1 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_y2_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR1/inst/r_y2_right1__0 multiplier stage design_2_i/effect/EQ/IIR1/inst/r_y2_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x01 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x01/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x01__0 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x01__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x0_right1 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x0_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x0_right1__0 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x0_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x11 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x11__0 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x11__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x1_right1 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x1_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x1_right1__0 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x1_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x21 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x21__0 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x21__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x2_right1 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x2_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_x2_right1__0 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_x2_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y11 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_y11/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y11__0 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_y11__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y1_right1 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_y1_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y1_right1__0 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_y1_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y21 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_y21/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y21__0 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_y21__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y2_right1 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_y2_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR2/inst/r_y2_right1__0 multiplier stage design_2_i/effect/EQ/IIR2/inst/r_y2_right1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR3/inst/r_x01 multiplier stage design_2_i/effect/EQ/IIR3/inst/r_x01/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR3/inst/r_x01__0 multiplier stage design_2_i/effect/EQ/IIR3/inst/r_x01__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_2_i/effect/EQ/IIR3/inst/r_x0_right1 multiplier stage design_2_i/effect/EQ/IIR3/inst/r_x0_right1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_x_right_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_Allpass_0/inst/r_y_right_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right0 output is connected to registers with an asynchronous reset (design_2_i/effect/reverb/AXI_lowpass_0/inst/r_x_right_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
INFO: [Common 17-14] Message 'DRC DPOR-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[0]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[0]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[0]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[10]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[10]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[10]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[11]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[11]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[11]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[12]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[12]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[12]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[13]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[13]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[13]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[14]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[14]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[14]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[15]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[15]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[15]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[16]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[16]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[16]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[17]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[17]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[17]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[18]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[18]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[18]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[19]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[19]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[19]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[1]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[1]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[1]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[20]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[20]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[20]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[21]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[21]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[21]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[22]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[22]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[22]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[23]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[23]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[23]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[2]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[2]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[2]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[3]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[3]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[3]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[4]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[4]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[4]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[5]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[5]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[5]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[6]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[6]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[6]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[7]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[7]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[7]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[8]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[8]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[8]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/am1_reg[9]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/am1_reg[9]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/am1_reg[9]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[0]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[0]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[0]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[10]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[10]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[10]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[11]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[11]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[11]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[12]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[12]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[12]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[13]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[13]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[13]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[14]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[14]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[14]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[15]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[15]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[15]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[16]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[16]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[16]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[17]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[17]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[17]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[18]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[18]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[18]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[19]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[19]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[19]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[1]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[1]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[1]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[20]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[20]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[20]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[21]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[21]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[21]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[22]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[22]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[22]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[23]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[23]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[23]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[2]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[2]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[2]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[3]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[3]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[3]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[4]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[4]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[4]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[5]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[5]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[5]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[6]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[6]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[6]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[7]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[7]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[7]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[8]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[8]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[8]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC PDRC-153] Gated clock check: Net design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[9]_LDC_i_1_n_0 is a gated clock net sourced by a combinational pin design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[9]_LDC_i_1/O, cell design_2_i/effect/AXI_ANF_0/inst/rhom1_reg[9]_LDC_i_1. This is not good design practice and will likely impact performance. For SLICE registers, for example, use the CE pin to control the loading of data.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[10] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[5]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[11] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[6]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[12] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[7]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[13] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[8]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[14] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[9]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[9]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[5] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[0]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[6] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[1]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[7] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[2]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[8] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[3]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRARDADDR[9] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/Q[4]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_write_addr_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[10] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[5]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[11] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[6]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[12] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[7]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[13] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[8]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[14] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[9]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb1_read_addr_reg[9]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[5] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[0]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[6] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[1]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[7] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[2]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[8] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[3]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg has an input control pin design_2_i/effect/AXI_pitch_shift_0/inst/cb1/mem_reg/ADDRBWRADDR[9] (net: design_2_i/effect/AXI_pitch_shift_0/inst/cb1/ADDRBWRADDR[4]) which is driven by a register (design_2_i/effect/AXI_pitch_shift_0/inst/cb2_read_addr_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 965 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_2_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'D:/YANLIU/KULeuven/course/master/thesis/Project/overlay_final_v2/overlay_final_v2/overlay_final_v2.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Sun May 14 22:41:00 2023. For additional details about this file, please refer to the WebTalk help file at D:/Xilinx/Vivado/2020.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
162 Infos, 501 Warnings, 4 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:51 ; elapsed = 00:00:38 . Memory (MB): peak = 2680.148 ; gain = 337.352
INFO: [Common 17-206] Exiting Vivado at Sun May 14 22:41:00 2023...
